1. 日期

    Date.now() // 获取当前时间的毫秒数
    var dt = new Date()
    dt.getTime() // 获取毫秒数
    dt.getFullYear() // 年
    dt.getMonth()  // 月（0-11）   只有月，需要获取之后 +1
    dt.getDate() // 日（0-31）
    dt.getHours() // 时 （0-23）
    dt.getMinutes() // 分 （0-59）
    dt.getSeconds() // 秒 （0-59）

2. Math

    获取随机数 Math.random()        ----> 获取到的是大于0，小于1的一个长度不固定的小数，不会重复

    可以用来清除缓存

3. 数组API

    forEach 遍历所有元素
    every   判断所有元素是否都符合条件
    some    判断是否至少有一个元素符合条件
    sort    排序
    map     对元素重新组装，生成新数组
    filter  过滤符合条件的元素


    forEach:

        var arr = [1,2,3]
        arr.forEach(function(item, index){
            // 遍历数组的所有元素
            console.log(index, item)
        })


    every: 

        var arr = [1,2,3]
        var result = arr.every(function(item, index){
            // 用来判断所有的数组元素，都满足一个条件
            if(item < 4) {
                return true
            }
        })
        console.log(result)



    some:

        var arr = [1, 2, 3]
        var result = arr.some(function(item, index){
            // 用来判断所有的数组元素，只要有一个满足条件即可
            if(item < 2) {
                return true
            }
        })
        console.log(result)


    sort:

        var arr = [1, 4, 2, 3, 5]
        var arr2 = arr.sort(function(a, b){
            // 从小到大
            return a - b

            // 从大到小
            // return b - a
        })    
        console.log(arr2)


    map:

        var arr = [1,2,3,4]
        var arr2 = arr.map(function(item, index){
            return '<b>'+ item + '</b>'
        })    
        console.log(arr2)



    filter:

        var arr = [1,2,3]
        var arr2 = arr.filter(function(item, index){
            // 通过某一个条件过滤数组
            if(item>=2){
                return true
            }
        })
        console.log(arr2)

4. 对象API

    for-in API

    let obj = {
        x: 100,
        y: 200,
        z: 300
    }
    for(let key in obj) {
        // 注意这里的 hasOwnProperty,在讲原型链的时候讲过了
        if(obj.hasOwnProperty(key)){
            console.log(key, obj[key])
        }
    }

    