1.如何理解JSON?

    从两点理解： 

        1. JSON是一个JS对象----它有2个API

            . JSON.stringify({a:10,b:20})  // '{'a': 10, 'b': 20}'   把对象 {a:10, b:20} 转换成字符串并且对象的key也变成字符串

                JSON 的常规用途是同 web 服务器进行数据交换。
                在向 web 服务器发送数据时，数据必须是字符串。
                通过 JSON.stringify() 把 JavaScript 对象转换为字符串。


            . JSON.parse('{'a': 10, 'b': 20}')  // {a:10,b:20}  把字符串变成对象

                JSON 的常规用途是同 web 服务器进行数据传输。
                在从 web 服务器接收数据时，数据永远是字符串。
                通过 JSON.parse() 解析数据，这些数据会成为 JavaScript 对象。     



        2. JSON 是一种数据格式


            . 交换数据:
                当数据在浏览器与服务器之间进行交换时，这些数据只能是文本。
                JSON 属于文本，并且我们能够把任何 JavaScript 对象转换为 JSON，然后将 JSON 发送到服务器。
                我们也能把从服务器接收到的任何 JSON 转换为 JavaScript 对象。
                以这样的方式，我们能够把数据作为 JavaScript 对象来处理，无需复杂的解析和转译。

                .发送数据
                    如果您的数据存储在 JavaScript 对象中，您可以把该对象转换为 JSON，然后将其发送到服务器。

                    var myObj = { name:"Bill Gates",  age:62, city:"Seattle" };
                    var myJSON =  JSON.stringify(myObj);
                    window.location = "demo_json.php?x=" + myJSON;

                .接收数据
                    如果您以 JSON 格式接收到数据，您能够将其转换为 JavaScript 对象： 

                    var myJSON = '{ "name":"Bill Gates",  "age":62, "city":"Seattle" }';
                    var myObj =  JSON.parse(myJSON);
                    document.getElementById("demo").innerHTML = myObj.name;   


            . 存储数据    
                在存储数据时，数据必须是某种具体的格式，并且无论您选择在何处存储它，文本永远是合法格式之一。
                JSON 让 JavaScript 对象存储为文本成为可能。    

                    //存储数据：
                    myObj = { name:"Bill Gates",  age:62, city:"Seattle" };
                    myJSON =  JSON.stringify(myObj);
                    localStorage.setItem("testJSON", myJSON);

                    //接收数据：
                    text = localStorage.getItem("testJSON");
                    obj =  JSON.parse(text);
                    document.getElementById("demo").innerHTML = obj.name;




       


