console.log(100)
setTimeout(function(){
    console.log(200)
})
console.log(300)

执行过程：

    . 执行第一行，打印100
    . 执行setTimeout后，传入setTimeout的函数会被暂存起来，不会立即执行（单线程的特点，不能同时干两件事）
    . 执行最后一行，打印300
    . 待所有程序执行完，处于空闲状态时，会立马看看有没有暂存起来的要执行
    . 发现暂存起来的setTimeout中的函数无需等待时间，就立即过来执行    

总结：
 js执行时，首先会执行主线程，异步相关的会存到异步队列中；
 当主线程执行完毕，再开始执行异步队列